<launch>

<arg name="resolution"/> <!-- 栅格边长 -->

<arg name="map_size_x"/>
<arg name="map_size_y" />
<!-- <arg name="map_size_z" /> 地图尺寸 -->

<arg name="target_x_" />
<arg name="target_y_"/>
<arg name="init_x_" />
<arg name="init_y_"/>
  <arg name= "uav_id_"/>
  <arg name="sight_radius"/>
  <arg name = "interval"/>
  
  <node pkg="multi_grid_path_searcher" type="multi_astar_node" name="uav_$(arg uav_id_)_astar_node" output="screen" required = "true">

      <remap from="~waypoints"       to="/move_base_simple/goal"/>
      <remap from="~map"             to="/uav_$(arg uav_id_)_grid_map/occupancy_inflate"/> 
      <remap from="~pose"            to="/uav_$(arg uav_id_)_mavbs/setpoint_raw/local"/> 
       <remap from="~odom"        to="/uav_$(arg uav_id_)_global_odom"/> 
     <!-- <remap from="/flag_detect"       to="/uav$(arg uav_id_)/flag_detect"/> -->
      <remap from="grid_map_vis"             to="/uav_$(arg uav_id_)_a_star/grid_map_vis"/> 
      <remap from="grid_path_vis"            to="/uav_$(arg uav_id_)_a_star/grid_path_vis"/> 
     <remap from="visited_nodes_vis"             to="/uav_$(arg uav_id_)_a_star/visited_nodes_vis"/> 
      <remap from="grid_path"            to="/uav_$(arg uav_id_)_a_star/grid_path"/> 
     <remap from="grid_twist"             to="/uav_$(arg uav_id_)_a_star/grid_twist"/> 
      <remap from="target_arrived"            to="/uav_$(arg uav_id_)_a_star/target_arrived"/> 

      <param name="map/resolution"   value="$(arg resolution)" />
      <param name="map/x_size"       value="$(arg map_size_x)"/>
      <param name="map/y_size"       value="$(arg map_size_y)"/>
      <!-- <param name="map/z_size"       value="$(arg map_size_z)"/> -->

      <param name="planning/target_x_" value="$(arg target_x_)"/>
      <param name="planning/target_y_" value="$(arg target_y_)"/>
      <param name="planning/start_x" value="$(arg init_x_)"/>
      <param name="planning/start_y" value="$(arg init_y_)"/>
      <!-- <param name="planning/start_z" value="$(arg start_z)"/> -->

      <param name="planning/sight_radius" value="$(arg sight_radius)"/>
      <param name="planning/interval_" value="$(arg interval)"/>
  </node>

</launch>
